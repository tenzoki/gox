# Cells define specific agent instances and their configuration

cell:
  id: "pipeline:file-transform"
  description: "File processing pipeline with ingestion, transformation, and output"
  debug: true

  # Pipeline orchestration settings
  orchestration:
    startup_timeout: "30s"
    shutdown_timeout: "15s"
    max_retries: 3
    retry_delay: "5s"
    health_check_interval: "10s"

  # Agent instances (specific IDs, not types)
  agents:
    - id: "file-ingester-demo-001" # ← Instance ID
      agent_type: "file-ingester" # ← Expected agent type
      ingress: "file:examples/pipeline-demo/input/*.txt"
      egress: "pub:new-file"
      dependencies: [] # ← No dependencies (starts first)
      config:
        digest: true
        digest_strategy: "delete"
        watch_interval_seconds: 2

    - id: "text-transformer-demo-001" # ← Instance ID
      agent_type: "text-transformer" # ← Expected agent type
      ingress: "sub:new-file"
      egress: "pipe:transform-data"
      dependencies: ["file-ingester-demo-001"] # ← Waits for file ingester
      config:
        transformation: "uppercase"
        add_metadata: true

    - id: "data-adapter-demo-001" # ← Instance ID
      agent_type: "adapter" # ← Expected agent type
      ingress: "sub:transform-requests"
      egress: "pub:transform-responses"
      dependencies: [] # ← Independent service
      config:
        supported_formats: ["json", "csv", "text"]
        max_request_size: "1MB"

    - id: "file-writer-demo-001" # ← Instance ID
      agent_type: "file-writer" # ← Expected agent type
      ingress: "pipe:transform-data"
      egress: "file:examples/pipeline-demo/output/processed_{{.timestamp}}.txt"
      dependencies: ["text-transformer-demo-001"] # ← Waits for transformer
      config:
        output_format: "txt"
        create_directories: true
# ---
# cell:
#   id: "controller:demo-controller"
#   description: "tbd"
#   debug: true
# ---
# cell:
#   id: "pubsub:pubsub-demo"
#   description: "tbd"
